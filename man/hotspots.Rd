% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/results_functions.R
\name{hotspots}
\alias{hotspots}
\title{Hotspots}
\usage{
hotspots(
  grid_data,
  stan_fit,
  incidence.threshold = NULL,
  irr.threshold = NULL,
  irr.lag = NULL,
  rr.threshold = NULL,
  popdens,
  col_label = NULL
)
}
\arguments{
\item{grid_data}{sf object describing a regular grid over the area of interest.
Should be the same object used in the model fit. See \link[rts2]{create_grid}}

\item{stan_fit}{A \link[rstan]{stanfit} or \link[cmdstanr]{CmdStanMCMC} object.
Output of \link[rts2]{lgcp_fit}}

\item{incidence.threshold}{Numeric. Threshold of population standardised incidence
above which an area is a hotspot}

\item{irr.threshold}{Numeric. Threshold of incidence rate ratio
above which an area is a hotspot.}

\item{irr.lag}{integer. Lag of time period to calculate the incidence rate ratio.
Only required if \code{irr.threshold} is not \code{NULL}.}

\item{rr.threshold}{numeric. Threshold of local relative risk
above which an area is a hotspot}

\item{popdens}{character string. Name of variable in \code{grid_data}
specifying the population density. Needed if \code{incidence.threshold} is not
\code{NULL}}

\item{col_label}{character string. If not NULL then the name of the column
for the hotspot probabilities.}
}
\value{
An \code{sf} object identical to \code{grid_data} with an extract column with the
probabilities each polygon is a hotspot
}
\description{
Generate hotspot probabilities
}
\details{
Given a definition of a hotspot in terms of threshold(s) for incidence,
relative risk, and/or incidence rate ratio, returns the probabilities
each area is a "hotspot". See Details of \link[rts2]{extract_preds}
}
\examples{
\dontrun{
b1 <- sf::st_sf(sf::st_sfc(sf::st_polygon(list(cbind(c(0,3,3,0,0),c(0,0,3,3,0))))))
g1 <- create_grid(b1,0.5)
dp <- data.frame(y=runif(10,0,3),x=runif(10,0,3),date=paste0("2021-01-",11:20))
dp <- create_points(dp,pos_vars = c('y','x'),t_var='date')
cov1 <- create_grid(b1,0.8)
cov1$cov <- runif(nrow(cov1))
g1 <- add_covariates(g1,
                     cov1,
                     zcols="cov",
                    verbose = FALSE)
g1 <- points_to_grid(g1, dp, laglength=5)
priors <- list(
  prior_lscale=c(0,0.5),
  prior_var=c(0,0.5),
  prior_linpred_mean=c(0),
  prior_linpred_sd=c(5)
  )
res <- lgcp_fit(g1,
                popdens="cov")
o1 <- hotspots(g1,
               res,
               incidence.threshold=1,
               popdens="cov")
}
}
