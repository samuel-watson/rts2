% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_functions.R
\name{points_to_grid}
\alias{points_to_grid}
\title{Generates case counts of points over a grid}
\usage{
points_to_grid(grid_data, point_data, t_win = c("day"), laglength = 14)
}
\arguments{
\item{grid_data}{sf object describing a regular grid over the area of interest.
See \link[rts2]{create_grid}}

\item{point_data}{sf object describing the point location of cases with a column
\code{t} of the date of the case in YYYY-MM-DD format. See \link[rts2]{create_points}}

\item{t_win}{character string. One of "day", "week", or "month" indicating the
length of the time windows in which to count cases}

\item{laglength}{integer The number of time periods to include counting back from the most
recent time period}
}
\value{
An sf object identical to \code{grid_data} but with additional columns with the
case count and date of each period
}
\description{
Counts the number of cases in each time period in each grid cell
}
\details{
Given the sf object describing a regular grid output from \code{create_grid()}
and the sf object with the point locations and date output from
\code{create_points()}, returns the grid object with additional columns indicating
the case count in each cell in each time period.

Case counts are generated for each grid cell for each time period. The user
can specify the length of each time period; currently \code{day}, \code{week}, and \code{month}
are supported.

The user must also specify the number of time periods to include with the
\code{laglength} argument. The total number of time periods is the specified lag
length counting back from the most recent case. The columns in the output
will be named \code{t1}, \code{t2},... up to the lag length, where the highest number
is the most recent period.
}
\examples{
b1 <- sf::st_sf(sf::st_sfc(sf::st_polygon(list(cbind(c(0,3,3,0,0),c(0,0,3,3,0))))))
g1 <- create_grid(b1,0.5)
dp <- data.frame(y=runif(10,0,3),x=runif(10,0,3),date=paste0("2021-01-",11:20))
dp <- create_points(dp,pos_vars = c('y','x'),t_var='date')
points_to_grid(g1, dp, laglength=5)
}
